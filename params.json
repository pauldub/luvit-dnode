{"name":"Luvit-dnode","tagline":"Substack's dnode ported to luvit!","body":"## luvit-dnode\r\n\r\n[![Build Status](https://travis-ci.org/pauldub/luvit-dnode.svg?branch=master)](https://travis-ci.org/pauldub/luvit-dnode)\r\n\r\nThis a port of [dnode.js](https://github.com/substack/dnode) from [substack](http://substack.net/). dnode is a rpc system allowing clients and servers to communicate with each other. \r\n\r\nIt looks like the simple example is working but more work is needed. For example `dnode:connect` and `dnode:listen` options support is really weak, so far only a port can be specified, but more work on the internals must be done before. \r\n\r\nThings that are probably wrong:\r\n\r\n- The scrubber might not be exactly right, it doesn't handle links, indexes starts at 1 due to lua table index. I dont't think callbacks from client -> server are ok, I haven't tested it though.\r\n- The walker might not be right too. I've ported it from the ruby version of dnode and some small parts are missing.\r\n- There is a small logger library, this is just actually used for debugging purposes and helping me understanding how things work. Actually they used to be print(dump(...)) statements the logger main purpose is toggling them.\r\n- Bits of everything else.\r\n\r\nThings that don't work:\r\n\r\n- no support for links (yet).\r\n\r\nI decided to write a port of dnode for luvit after reading this article: [Top 10 inventions at Browserling](www.catonmat.net/blog/top-10-browserling-inventions/). My goal is to port upnode and airport aswell, and maybe seaport too.\r\n\r\nI am also wondering if luvit can also be used with [OpenResty](http://openresty.org), and allow one to forward urls to dnodes, or something like that.\r\n\r\n## Usage\r\n\r\nInstall deps with `lui`, this will fetch dependencies under `modules/`. Lui is available at [dvv/luvit-lui](https://github.com/dvv/luvit-lui).\r\n\r\n### Example Server\r\n\r\n```lua\r\nlocal dnode = require('dnode')\r\n\r\ndnode:listen({\r\n\thello = function(cb)\r\n\t\tcb(\"hello world!\")\r\n\tend\r\n}, 7070)\r\n```\r\n\r\n### Example client\r\n\r\n```lua\r\nlocal dnode = require('dnode')\r\n\r\ndnode:connect(7070, function(remote)\r\n\tremote.hello(function(response)\r\n\t\tprint(response)\r\n\tend)\r\nend)\r\n```\r\n\r\nSee the `tests/` directory for more examples (TODO: Write more tests)\r\n\r\n## Tests\r\n\r\nShould write more tests, `bourbon` will eventually run them. For more informations on bourbon, see [racker/luvit-bourbon](https://github.com/racker/luvit-bourbon).\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}